#
#
# Input clocks (free running)
#
#
create_clock -name {input_clock_50} -period 20 [get_ports {OSC_50_B2}]
#create_clock -add -name {input_clock_50} -period 20 [get_ports {OSC_50_B2}]
#create_clock -add -name {input_clock_125} -period 8 [get_ports {clkin_125}]
# Note: input_clock_125 generated by pll
create_generated_clock -name {input_clock_125} -multiply_by 5 -divide_by 2 -source [get_pins {ethlink_inst|PLL|altpll_refclk2_inst|altpll_component|auto_generated|pll1|inclk[0]}] [get_pins {ethlink_inst|PLL|altpll_refclk2_inst|altpll_component|auto_generated|pll1|clk[0]}]
#create_generated_clock -add -name {input_clock_125} -source [get_pins {top1_inst|PLL|altpll_refclk2_inst|altpll_component|auto_generated|pll1|inclk[0]}] [get_pins {top1_inst|PLL|altpll_refclk2_inst|altpll_component|auto_generated|pll1|clk[0]}]
# Note: input_clock_125 generated by pll

#
# Set false paths to remove irrelevant setup and hold analysis 
#
set_false_path -from [get_clocks {input_clock_50}] -to [get_clocks {input_clock_125}]

##
##
## RGMII tx output
##
##
#
##
## Create tx clock (125MHz, 1000Mbps)
##
#create_generated_clock -name {tx_output_clock} -source [get_ports {clkin_125}] -master_clock {input_clock_125} [get_ports {enet_gtx_clk}]
###
### Create tx clock (25MHz, 100Mbps)
###
##create_generated_clock -name {tx_input_clock} -source [get_ports {clkin_50}] -divide_by 2 -master_clock {input_clock_50} [get_keepers {top1:top1_inst|allregs.dout.clk50.div2}]
##create_generated_clock -name {tx_output_clock} -source [get_keepers {top1:top1_inst|allregs.dout.clk50.div2}] -master_clock tx_input_clock [get_ports {enet_gtx_clk}]
#
#set tx_input_clock {input_clock_125}
#set tx_output_clock {tx_output_clock}
#
##
## Set output delay (RGMII-ID interface : -0.9ns setup min, 2.7ns hold min)
##
## --> max delay = -0.9 negative value means signal can change after 
##                      latch edge 
## --> min delay = -2.7 negative value means hold time after latch edge 
##
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -max -0.900 [get_ports {enet_tx_d[0]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -min -2.700 [get_ports {enet_tx_d[0]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -max -0.900 [get_ports {enet_tx_d[0]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -min -2.700 [get_ports {enet_tx_d[0]}]
#
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -max -0.900 [get_ports {enet_tx_d[1]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -min -2.700 [get_ports {enet_tx_d[1]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -max -0.900 [get_ports {enet_tx_d[1]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -min -2.700 [get_ports {enet_tx_d[1]}]
#
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -max -0.900 [get_ports {enet_tx_d[2]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -min -2.700 [get_ports {enet_tx_d[2]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -max -0.900 [get_ports {enet_tx_d[2]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -min -2.700 [get_ports {enet_tx_d[2]}]
#
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -max -0.900 [get_ports {enet_tx_d[3]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -min -2.700 [get_ports {enet_tx_d[3]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -max -0.900 [get_ports {enet_tx_d[3]}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -min -2.700 [get_ports {enet_tx_d[3]}]
#
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -max -0.900 [get_ports {enet_tx_en}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock]             -min -2.700 [get_ports {enet_tx_en}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -max -0.900 [get_ports {enet_tx_en}]
#set_output_delay -add_delay -clock [get_clocks $tx_output_clock] -clock_fall -min -2.700 [get_ports {enet_tx_en}]
#
##
## Set multicycle paths to align the launch edge with the latch edge
##
#set_multicycle_path -setup -end -rise_from [get_clocks $tx_input_clock] -rise_to [get_clocks $tx_output_clock] 0
#set_multicycle_path -setup -end -fall_from [get_clocks $tx_input_clock] -fall_to [get_clocks $tx_output_clock] 0
#
##
## Set false paths to remove irrelevant setup and hold analysis 
##
#set_false_path -setup -rise_from [get_clocks $tx_input_clock] -fall_to [get_clocks $tx_output_clock] 
#set_false_path -hold  -rise_from [get_clocks $tx_input_clock] -fall_to [get_clocks $tx_output_clock] 
#
#set_false_path -setup -fall_from [get_clocks $tx_input_clock] -rise_to [get_clocks $tx_output_clock] 
#set_false_path -hold  -fall_from [get_clocks $tx_input_clock] -rise_to [get_clocks $tx_output_clock] 
#
#set_false_path -from  [get_clocks {input_clock_50}] -to [get_clocks $tx_input_clock]
#
##
##
## RGMII rx input
##
##
#
##
## Create input clock (125MHz, 1000Mbps)
##
#create_clock -name rx_input_clock -period 8 [get_ports {enet_rx_clk}]
###
### Create input clock (25MHz, 100Mbps)
###
##create_clock -name {rx_input_clock} -period 40 [get_ports {enet_rx_clk}]
#
##
## Set input delay (RGMII-ID interface, 1.2ns setup/hold time min:
## slack 0.5ns --> setup/hold request (1.2 - 0.5) = 0.7ns)
##
#set rx_setup_min 0.7
#set rx_hold_min  0.7
#
#set_input_delay            -clock [get_clocks {rx_input_clock}]             -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[0]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}]             -min $rx_hold_min             [get_ports {enet_rx_d[0]}] 
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[0]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -min $rx_hold_min             [get_ports {enet_rx_d[0]}]
#
#set_input_delay            -clock [get_clocks {rx_input_clock}]             -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[1]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}]             -min $rx_hold_min             [get_ports {enet_rx_d[1]}] 
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[1]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -min $rx_hold_min             [get_ports {enet_rx_d[1]}]
#
#set_input_delay            -clock [get_clocks {rx_input_clock}]             -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[2]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}]             -min $rx_hold_min             [get_ports {enet_rx_d[2]}] 
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[2]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -min $rx_hold_min             [get_ports {enet_rx_d[2]}]
#
#set_input_delay            -clock [get_clocks {rx_input_clock}]             -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[3]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}]             -min $rx_hold_min             [get_ports {enet_rx_d[3]}] 
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_d[3]}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -min $rx_hold_min             [get_ports {enet_rx_d[3]}]
#
#set_input_delay            -clock [get_clocks {rx_input_clock}]             -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_dv}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}]             -min $rx_hold_min             [get_ports {enet_rx_dv}] 
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -max [expr 4 - $rx_setup_min] [get_ports {enet_rx_dv}]
#set_input_delay -add_delay -clock [get_clocks {rx_input_clock}] -clock_fall -min $rx_hold_min             [get_ports {enet_rx_dv}]
#
##
## Set false paths to remove irrelevant setup and hold analysis 
##
#set_false_path -rise_from [get_clocks {rx_input_clock}] -fall_to [get_clocks $tx_output_clock] -setup
#set_false_path -rise_from [get_clocks {rx_input_clock}] -fall_to [get_clocks $tx_output_clock] -hold
#
#set_false_path -fall_from [get_clocks {rx_input_clock}] -rise_to [get_clocks $tx_output_clock] -setup
#set_false_path -fall_from [get_clocks {rx_input_clock}] -rise_to [get_clocks $tx_output_clock] -hold
#
#set_false_path -rise_from [get_clocks {rx_input_clock}] -fall_to [get_clocks $tx_input_clock] -setup
#set_false_path -rise_from [get_clocks {rx_input_clock}] -fall_to [get_clocks $tx_input_clock] -hold
#
#set_false_path -fall_from [get_clocks {rx_input_clock}] -rise_to [get_clocks $tx_input_clock] -setup
#set_false_path -fall_from [get_clocks {rx_input_clock}] -rise_to [get_clocks $tx_input_clock] -hold
#
#set_false_path  -from  [get_clocks {input_clock_50}] -to [get_clocks {rx_input_clock}]
#set_false_path  -from  [get_clocks {input_clock_125}] -to [get_clocks {rx_input_clock}]
#
###
### Clock uncertainty generated by the 'derive_clock_uncertainty command'
###
###set_clock_uncertainty -rise_from [get_clocks tx_input_clock] -rise_to [get_clocks tx_output_clock] -setup 0.110
###set_clock_uncertainty -rise_from [get_clocks tx_input_clock] -fall_to [get_clocks tx_output_clock] -setup 0.110
###set_clock_uncertainty -fall_from [get_clocks tx_input_clock] -rise_to [get_clocks tx_output_clock] -setup 0.110
###set_clock_uncertainty -fall_from [get_clocks tx_input_clock] -fall_to [get_clocks tx_output_clock] -setup 0.110
###set_clock_uncertainty -rise_from [get_clocks tx_input_clock] -rise_to [get_clocks tx_output_clock] -hold 0.110
###set_clock_uncertainty -rise_from [get_clocks tx_input_clock] -fall_to [get_clocks tx_output_clock] -hold 0.110
###set_clock_uncertainty -fall_from [get_clocks tx_input_clock] -rise_to [get_clocks tx_output_clock] -hold 0.110
###set_clock_uncertainty -fall_from [get_clocks tx_input_clock] -fall_to [get_clocks tx_output_clock] -hold 0.110
###
